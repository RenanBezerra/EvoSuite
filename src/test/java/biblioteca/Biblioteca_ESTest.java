/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 27 00:00:50 GMT 2021
 */

package biblioteca;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class Biblioteca_ESTest extends Biblioteca_ESTest_scaffolding {

	@Test(timeout = 4000)
	public void test00() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		Livro livro0 = biblioteca0.getLivro(0);
		assertNull(livro0);
	}

	@Test(timeout = 4000)
	public void test01() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		biblioteca0.criaLivros(3532);
		Livro livro0 = new Livro((-3115), "$SrFmVsw", "$SrFmVsw", "$SrFmVsw", (-3115), (-3115));
		biblioteca0.incluirLivro(livro0);
		biblioteca0.obterLivro("s");
		assertEquals(1, biblioteca0.getQuantidade());
	}

	@Test(timeout = 4000)
	public void test02() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		biblioteca0.criaLivros(3532);
		Livro livro0 = new Livro((-3114), "[#rN7h", "[#rN7h", "$SrFmVsw", (-3114), (-3114));
		livro0.setCodigo(701);
		biblioteca0.incluirLivro(livro0);
		biblioteca0.obterLivro((-3114));
		assertEquals(3532, biblioteca0.getCapacidade());
	}

	@Test(timeout = 4000)
	public void test03() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("d#C*ZWL))9# 9hVe", "d#C*ZWL))9# 9hVe", 1);
		biblioteca0.incluirLivro((Livro) null);
		biblioteca0.criaLivros(0);
		biblioteca0.incluirLivro((Livro) null);
		assertEquals(1, biblioteca0.getQuantidade());
		assertEquals(0, biblioteca0.getCapacidade());
	}

	@Test(timeout = 4000)
	public void test04() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("{{@X?==g?0 e(", "{{@X?==g?0 e(", 3207);
		Livro livro0 = new Livro();
		livro0.setTitulo("{{@X?==g?0 e(");
		biblioteca0.incluirLivro(livro0);
		biblioteca0.obterLivro("");
		assertEquals(1, biblioteca0.getQuantidade());
	}

	@Test(timeout = 4000)
	public void test05() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		biblioteca0.criaLivros(3532);
		Livro livro0 = new Livro(3532, "[#rN7h", "[#rN7h", "$SrFmVsw", 3532, 3532);
		biblioteca0.incluirLivro(livro0);
		biblioteca0.obterLivro("[#rN7h");
		assertEquals(3532, biblioteca0.getCapacidade());
	}

	@Test(timeout = 4000)
	public void test06() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		Livro livro0 = new Livro();
		biblioteca0.criaLivros(1432);
		biblioteca0.incluirLivro(livro0);
		biblioteca0.obterLivro(0);
		assertEquals(1432, biblioteca0.getCapacidade());
	}

	@Test(timeout = 4000)
	public void test07() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		biblioteca0.criaLivros(3532);
		Livro livro0 = new Livro(3532, "[#rN7h", "[#rN7h", "$SrFmVsw", 3532, 3532);
		biblioteca0.incluirLivro(livro0);
		biblioteca0.obterLivro(3532);
		assertEquals(3532, biblioteca0.getCapacidade());
	}

	@Test(timeout = 4000)
	public void test08() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		biblioteca0.criaLivros(3532);
		biblioteca0.incluirLivro((Livro) null);
		int int0 = biblioteca0.getQuantidade();
		assertEquals(3532, biblioteca0.getCapacidade());
		assertEquals(1, int0);
	}

	@Test(timeout = 4000)
	public void test09() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("d#C*h7ZWL))9# 9hVe", "d#C*h7ZWL))9# 9hVe", 1);
		biblioteca0.setNome((String) null);
		biblioteca0.getNome();
		assertEquals(1, biblioteca0.getCapacidade());
		assertEquals(0, biblioteca0.getQuantidade());
	}

	@Test(timeout = 4000)
	public void test10() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		biblioteca0.setNome("");
		String string0 = biblioteca0.getNome();
		assertEquals("", string0);
	}

	@Test(timeout = 4000)
	public void test11() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("biblioteca.Livro", "biblioteca.Livro", 0);
		biblioteca0.getLocal();
		assertEquals(0, biblioteca0.getQuantidade());
		assertEquals(0, biblioteca0.getCapacidade());
	}

	@Test(timeout = 4000)
	public void test12() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("biblioteca.Livro", "biblioteca.Livro", 0);
		biblioteca0.setLocal("");
		biblioteca0.getLocal();
		assertEquals(0, biblioteca0.getQuantidade());
		assertEquals(0, biblioteca0.getCapacidade());
	}

	@Test(timeout = 4000)
	public void test13() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("fG~'$?:s{0?8 *bX", "fG~'$?:s{0?8 *bX", 1245);
		Livro livro0 = new Livro();
		biblioteca0.incluirLivro(livro0);
		biblioteca0.incluirLivro(livro0);
		biblioteca0.getLivro(1);
		assertEquals(2, biblioteca0.getQuantidade());
	}

	@Test(timeout = 4000)
	public void test14() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		biblioteca0.criaLivros(3532);
		biblioteca0.incluirLivro((Livro) null);
		Livro livro0 = new Livro(3532, "[#rN7h", "[#rN7h", "$SrFmVsw", 3532, 3532);
		biblioteca0.incluirLivro(livro0);
		biblioteca0.getLivro(1);
		assertEquals(3532, biblioteca0.getCapacidade());
	}

	@Test(timeout = 4000)
	public void test15() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		biblioteca0.criaLivros(3532);
		biblioteca0.incluirLivro((Livro) null);
		Livro livro0 = new Livro((-3114), "[#rN7h", "[#rN7h", "$SrFmVsw", (-3114), (-3114));
		biblioteca0.incluirLivro(livro0);
		biblioteca0.getLivro(1);
		assertEquals(2, biblioteca0.getQuantidade());
	}

	@Test(timeout = 4000)
	public void test16() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		int int0 = biblioteca0.getCapacidade();
		assertEquals(0, int0);
	}

	@Test(timeout = 4000)
	public void test17() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		biblioteca0.criaLivros(1527);
		Livro livro0 = new Livro();
		biblioteca0.incluirLivro(livro0);
		// Undeclared exception!
		try {
			biblioteca0.obterLivro("-&");
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
			verifyException("biblioteca.Biblioteca", e);
		}
	}

	@Test(timeout = 4000)
	public void test18() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("d#C*h7ZWL))9# 9hVe", "d#C*h7ZWL))9# 9hVe", 1);
		biblioteca0.incluirLivro((Livro) null);
		biblioteca0.criaLivros(0);
		// Undeclared exception!
		try {
			biblioteca0.obterLivro("zT{.b?in&z/*!b");
			fail("Expecting exception: ArrayIndexOutOfBoundsException");

		} catch (ArrayIndexOutOfBoundsException e) {
			//
			// 0
			//
			verifyException("biblioteca.Biblioteca", e);
		}
	}

	@Test(timeout = 4000)
	public void test19() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("", "", 1359);
		biblioteca0.incluirLivro((Livro) null);
		biblioteca0.criaLivros(0);
		// Undeclared exception!
		try {
			biblioteca0.obterLivro(0);
			fail("Expecting exception: ArrayIndexOutOfBoundsException");

		} catch (ArrayIndexOutOfBoundsException e) {
			//
			// 0
			//
			verifyException("biblioteca.Biblioteca", e);
		}
	}

	@Test(timeout = 4000)
	public void test20() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		// Undeclared exception!
		try {
			biblioteca0.getLivro((-350));
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
			verifyException("biblioteca.Biblioteca", e);
		}
	}

	@Test(timeout = 4000)
	public void test21() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("l y<bxsk%k-p4", "\u0002 CBU~V", 0);
		// Undeclared exception!
		try {
			biblioteca0.criaLivros((-3096));
			fail("Expecting exception: NegativeArraySizeException");

		} catch (NegativeArraySizeException e) {
			//
			// no message in exception (getMessage() returned null)
			//
			verifyException("biblioteca.Biblioteca", e);
		}
	}

	@Test(timeout = 4000)
	public void test22() throws Throwable {
		Biblioteca biblioteca0 = null;
		try {
			biblioteca0 = new Biblioteca("", "", (-1));
			fail("Expecting exception: NegativeArraySizeException");

		} catch (NegativeArraySizeException e) {
			//
			// no message in exception (getMessage() returned null)
			//
			verifyException("biblioteca.Biblioteca", e);
		}
	}

	@Test(timeout = 4000)
	public void test23() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca((String) null, "p~ji", 1546);
		// Undeclared exception!
		try {
			biblioteca0.getLivro((-1));
			fail("Expecting exception: ArrayIndexOutOfBoundsException");

		} catch (ArrayIndexOutOfBoundsException e) {
			//
			// -1
			//
			verifyException("biblioteca.Biblioteca", e);
		}
	}

	@Test(timeout = 4000)
	public void test24() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		Livro livro0 = biblioteca0.getLivro(827);
		assertNull(livro0);
	}

	@Test(timeout = 4000)
	public void test25() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		biblioteca0.criaLivros(3532);
		Livro livro0 = new Livro((-3114), "g[#rN7c", "g[#rN7c", "$SrFmVsw", (-3114), (-3114));
		biblioteca0.incluirLivro(livro0);
		biblioteca0.obterLivro("\")pX1,'^5HWWh");
		assertEquals(3532, biblioteca0.getCapacidade());
	}

	@Test(timeout = 4000)
	public void test26() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("_", "_", 1);
		assertEquals(0, biblioteca0.getQuantidade());

		biblioteca0.incluirLivro((Livro) null);
		biblioteca0.obterLivro("_");
		assertEquals(1, biblioteca0.getQuantidade());
	}

	@Test(timeout = 4000)
	public void test27() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		biblioteca0.criaLivros(3532);
		Livro livro0 = new Livro((-3115), "$SrFmVsw", "$SrFmVsw", "$SrFmVsw", (-3115), (-3115));
		biblioteca0.incluirLivro(livro0);
		biblioteca0.obterLivro((-3115));
		assertEquals(1, biblioteca0.getQuantidade());
	}

	@Test(timeout = 4000)
	public void test28() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		biblioteca0.criaLivros(3532);
		Livro livro0 = new Livro((-3114), "g[#rN7c", "g[#rN7c", "$SrFmVsw", (-3114), (-3114));
		biblioteca0.incluirLivro(livro0);
		biblioteca0.obterLivro(3532);
		assertEquals(1, biblioteca0.getQuantidade());
	}

	@Test(timeout = 4000)
	public void test29() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("_", "_", 1);
		assertEquals(0, biblioteca0.getQuantidade());

		biblioteca0.incluirLivro((Livro) null);
		biblioteca0.obterLivro(1);
		assertEquals(1, biblioteca0.getQuantidade());
	}

	@Test(timeout = 4000)
	public void test30() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("_", "_", 1);
		assertEquals(0, biblioteca0.getQuantidade());

		biblioteca0.incluirLivro((Livro) null);
		biblioteca0.incluirLivro((Livro) null);
		assertEquals(1, biblioteca0.getQuantidade());
	}

	@Test(timeout = 4000)
	public void test31() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("_", "_", 1);
		biblioteca0.getNome();
		assertEquals(0, biblioteca0.getQuantidade());
		assertEquals(1, biblioteca0.getCapacidade());
	}

	@Test(timeout = 4000)
	public void test32() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("_", "_", 1);
		int int0 = biblioteca0.getQuantidade();
		assertEquals(0, int0);
		assertEquals(1, biblioteca0.getCapacidade());
	}

	@Test(timeout = 4000)
	public void test33() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca();
		String string0 = biblioteca0.getLocal();
		assertNull(string0);
	}

	@Test(timeout = 4000)
	public void test34() throws Throwable {
		Biblioteca biblioteca0 = new Biblioteca("_", "_", 1);
		int int0 = biblioteca0.getCapacidade();
		assertEquals(1, int0);
		assertEquals(0, biblioteca0.getQuantidade());
	}
}
